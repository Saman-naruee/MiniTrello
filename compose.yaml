services:
  db:
    image: postgres:17
    container_name: minitrello_db_container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=minitrello
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  backend:
    build: .
    container_name: minitrello_backend_container
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=config.development
      - DEBUG=True
      - PREFERRED_DB=postgres
      - DB_NAME=minitrello
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=admin123
      - CELERY_BROKER_URL=redis://redis:6379/0  # Add if not in settings/.env
    command: gunicorn MiniTrello.wsgi:application --bind 0.0.0.0:8000
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: minitrello_redis_container
    ports:
      - "6379:6379"
    restart: unless-stopped

  celery_worker:
    build: .
    container_name: minitrello_celery_worker
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.development
      - DEBUG=True
      - PREFERRED_DB=postgres
      - DB_NAME=minitrello
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0  # Add if not in settings/.env
    entrypoint: /usr/local/bin/celery -A MiniTrello worker --loglevel=info
    command: []
    restart: unless-stopped
