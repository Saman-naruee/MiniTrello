DJANGO_ENV=dev  # Use 'dev', 'staging', or 'production'
SECRET_KEY=your-secret-key-here
DEBUG=True # keep it false in production
ALLOWED_HOSTS=[
    'localhost:8080', # For Google OAuth Getting refresh token
    'localhost:8000', # For Running the application
]


# Database settings
DATABASE_URL=sqlite:///db.sqlite3
# For PostgreSQL:
# DATABASE_URL=postgres://user:password@localhost:5432/dbname

# Email settings, If sending real emails in production then use:
# EMAIL_BACKEND = 'config.email_backend.GoogleOauth2EmailBackend'
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

DEFAULT_FROM_EMAIL=Your_Email@example.com

# Celery settings
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
CELERY_TASK_ALWAYS_EAGER=False  # Set to True to run tasks synchronously (useful for development)

# Application settings
BASE_URL=http://localhost:8000
MAX_BOARDS_PER_USER=10
MAX_MEMBERS_PER_BOARD=5
MAX_MEMBERSHIPS_PER_USER=15
IS_USE_API_FOR_PROFILE=False
PREFFERED_IMPLEMENTATION_FOR_PROJECT_API_OR_WEBPAGES=WEB

# postgres settings
PREFERRED_DB = postgres
DB_NAME = your db name
DB_USER = your db user
DB_PASSWORD = your db password
DB_HOST = localhost
DB_PORT = 5432


GOOGLE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
GOOGLE_TOKEN_URI=https://oauth2.googleapis.com/token
GOOGLE_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
GOOGLE_OAUTH_CLIENT_ID=your-google-oauth-client-id
GOOGLE_OAUTH_CLIENT_SECRET=your-google-oauth-client-secret
GOOGLE_REDIRECT_URIS=["http://127.0.0.1:8000/accounts/google/login/callback/", "*"]
GOOGLE_PROJECT_API_KEY=your-google-project-api-key
GOOGLE_OAUTH_REFRESH_TOKEN=your-google-oauth-refresh-token
GOOGLE_OAUTH_SENDER_EMAIL=Your_Email@example.com
